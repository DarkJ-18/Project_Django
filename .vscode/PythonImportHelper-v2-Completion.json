[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "App.App.asgi",
        "description": "App.App.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "App.App.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-znd4xq2)o89wlbb4dd7z)bud#a7vy1-&n@e%o$di_h=w9d_i-7'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-znd4xq2)o89wlbb4dd7z)bud#a7vy1-&n@e%o$di_h=w9d_i-7'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'tienda',",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'tienda',\n]\nMIDDLEWARE = [",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'App.urls'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "ROOT_URLCONF = 'App.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "WSGI_APPLICATION = 'App.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "App.App.settings",
        "description": "App.App.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "App.App.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "App.App.urls",
        "description": "App.App.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('tienda.urls')),\n]",
        "detail": "App.App.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "App.App.wsgi",
        "description": "App.App.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "App.App.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "App.tienda.migrations.0001_initial",
        "description": "App.tienda.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('cod', models.IntegerField(unique=True)),",
        "detail": "App.tienda.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "App.tienda.migrations.0002_product_categoria_product_stock",
        "description": "App.tienda.migrations.0002_product_categoria_product_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tienda', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='categoria',\n            field=models.IntegerField(blank=True, choices=[(0, ''), (1, 'Ropa'), (2, 'Comida'), (3, 'Electrodoméstico')], default=0, null=True),\n        ),",
        "detail": "App.tienda.migrations.0002_product_categoria_product_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "App.tienda.migrations.0003_factura",
        "description": "App.tienda.migrations.0003_factura",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('tienda', '0002_product_categoria_product_stock'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Factura',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('fecha', models.DateField(help_text='Fecha de Factura YYYY-MM-DD')),",
        "detail": "App.tienda.migrations.0003_factura",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "App.tienda.admin",
        "description": "App.tienda.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    list_display = ['id', 'cod', 'nombre', 'precio','categoria','stock']\n    search_fields = ['nombre', 'cod', 'categoria', 'stock']\n    list_filter = ['cod','categoria']\n    list_editable = ['nombre', 'categoria','stock']\n@admin.register(Factura)\nclass FacturaAdmin(admin.ModelAdmin):\n    list_display = ['id', 'cliente', 'fecha', 'num_factura','product']\n    search_fields = ['fecha', 'cliente', 'num_factura']\n    list_filter = ['fecha','cliente']",
        "detail": "App.tienda.admin",
        "documentation": {}
    },
    {
        "label": "FacturaAdmin",
        "kind": 6,
        "importPath": "App.tienda.admin",
        "description": "App.tienda.admin",
        "peekOfCode": "class FacturaAdmin(admin.ModelAdmin):\n    list_display = ['id', 'cliente', 'fecha', 'num_factura','product']\n    search_fields = ['fecha', 'cliente', 'num_factura']\n    list_filter = ['fecha','cliente']\n    list_editable = ['fecha', 'product','num_factura']",
        "detail": "App.tienda.admin",
        "documentation": {}
    },
    {
        "label": "TiendaConfig",
        "kind": 6,
        "importPath": "App.tienda.apps",
        "description": "App.tienda.apps",
        "peekOfCode": "class TiendaConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tienda'",
        "detail": "App.tienda.apps",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "App.tienda.models",
        "description": "App.tienda.models",
        "peekOfCode": "class Product(models.Model):\n    cod = models.IntegerField(unique=True)\n    nombre = models.CharField(max_length=254)\n    precio = models.IntegerField()\n    stock = models.IntegerField()\n    CATEGORIAS = (\n        (0, \"\"),\n        (1, \"Ropa\"),\n        (2, \"Comida\"),\n        (3, \"Electrodoméstico\"),",
        "detail": "App.tienda.models",
        "documentation": {}
    },
    {
        "label": "Factura",
        "kind": 6,
        "importPath": "App.tienda.models",
        "description": "App.tienda.models",
        "peekOfCode": "class Factura(models.Model):\n    fecha = models.DateField(help_text=\"Fecha de Factura YYYY-MM-DD\")\n    cliente = models.CharField(max_length=100)\n    num_factura = models.IntegerField()\n    product = models.ForeignKey('Product', on_delete=models.DO_NOTHING)\n    def __str__(self):\n        return f\"{self.num_factura} - {self.cliente}\"",
        "detail": "App.tienda.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "App.tienda.urls",
        "description": "App.tienda.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name='index'),\n    path(\"prueba/\", views.prueba, name=\"prueba\"),\n    path(\"user/\", views.user, name=\"user\"),\n    path(\"saludar/<str:apellido>/\", views.saludar, name=\"saludar\"),\n    path(\"suma/<int:num1>/<int:num2>/\", views.suma, name=\"suma\"),\n    path(\"encuesta_form/\", views.encuesta_form, name=\"encuesta_form\"),\n    path(\"procesar_encuesta/\", views.procesar_encuesta, name=\"procesar_encuesta\"),\n    path(\"sumar_formulario/\", views.sumar_formulario, name=\"sumar_formulario\"),\n    #CRUD Productos",
        "detail": "App.tienda.urls",
        "documentation": {}
    },
    {
        "label": "prueba",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def prueba(request):\n    return HttpResponse(\"<h1 style='color:#000fff;'> Hola mundo </h1>\")\ndef user(request):\n    return HttpResponse(\n        \"<h1 style='color:Green;'> Juan Camilo Gallego Jurado</h1>\"\n        \"<a href='../prueba/'>Link</a>\"\n    )\ndef index(request):\n    # return HttpResponse(\"Index\")\n    return render(request, \"index.html\")",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def user(request):\n    return HttpResponse(\n        \"<h1 style='color:Green;'> Juan Camilo Gallego Jurado</h1>\"\n        \"<a href='../prueba/'>Link</a>\"\n    )\ndef index(request):\n    # return HttpResponse(\"Index\")\n    return render(request, \"index.html\")\ndef saludar(request, apellido):\n    return HttpResponse(f\"Hola {apellido}\")",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def index(request):\n    # return HttpResponse(\"Index\")\n    return render(request, \"index.html\")\ndef saludar(request, apellido):\n    return HttpResponse(f\"Hola {apellido}\")\ndef suma(request, num1, num2):\n    return HttpResponse(f\"Resultado: {num1+num2}\")\ndef encuesta_form(request):\n    return render(request, \"formulario_encuesta.html\")\ndef procesar_encuesta(request):",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "saludar",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def saludar(request, apellido):\n    return HttpResponse(f\"Hola {apellido}\")\ndef suma(request, num1, num2):\n    return HttpResponse(f\"Resultado: {num1+num2}\")\ndef encuesta_form(request):\n    return render(request, \"formulario_encuesta.html\")\ndef procesar_encuesta(request):\n    nombre = request.POST.get(\"name\")\n    hambre = request.POST.get(\"hambre\")\n    return HttpResponse(",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "suma",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def suma(request, num1, num2):\n    return HttpResponse(f\"Resultado: {num1+num2}\")\ndef encuesta_form(request):\n    return render(request, \"formulario_encuesta.html\")\ndef procesar_encuesta(request):\n    nombre = request.POST.get(\"name\")\n    hambre = request.POST.get(\"hambre\")\n    return HttpResponse(\n        f\"Su nombre es <b>{nombre}</b> y <b>{hambre}</b> tiene hambre!!\"\n    )",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "encuesta_form",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def encuesta_form(request):\n    return render(request, \"formulario_encuesta.html\")\ndef procesar_encuesta(request):\n    nombre = request.POST.get(\"name\")\n    hambre = request.POST.get(\"hambre\")\n    return HttpResponse(\n        f\"Su nombre es <b>{nombre}</b> y <b>{hambre}</b> tiene hambre!!\"\n    )\ndef sumar_formulario(request):\n    if request.method == \"POST\":",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "procesar_encuesta",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def procesar_encuesta(request):\n    nombre = request.POST.get(\"name\")\n    hambre = request.POST.get(\"hambre\")\n    return HttpResponse(\n        f\"Su nombre es <b>{nombre}</b> y <b>{hambre}</b> tiene hambre!!\"\n    )\ndef sumar_formulario(request):\n    if request.method == \"POST\":\n        n1 = int(request.POST.get(\"num1\"))\n        n2 = int(request.POST.get(\"num2\"))",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "sumar_formulario",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def sumar_formulario(request):\n    if request.method == \"POST\":\n        n1 = int(request.POST.get(\"num1\"))\n        n2 = int(request.POST.get(\"num2\"))\n        # return HttpResponse(f\"la suma de {n1} + {n2} es <strong>{n1+n2}</strong>\")\n        contexto = {\"n1\": n1, \"n2\": n2, \"respuesta\": n1 + n2}\n        return render(\n            request,\n            \"sumar_respuesta.html\",contexto\n        )",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "productos",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def productos(request):\n    produ = Product.objects.all()\n    contexto = {\n        \"datos\":produ\n    }\n    return render(request,\"productos/lista_productos.html\", contexto) \ndef eliminar_producto(request, id_produc):\n    try:\n        produ = Product.objects.get(id=id_produc)\n        produ.delete()",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "eliminar_producto",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def eliminar_producto(request, id_produc):\n    try:\n        produ = Product.objects.get(id=id_produc)\n        produ.delete()\n        return HttpResponse(f\"Producto {produ.name} eliminado correctamente\")\n    except Product.DoesNotExist:\n        return HttpResponse(f\"El producto {produc.name} no existe\")\n    except IntegrityError:\n        return HttpResponse(\"Error al eliminar el producto relacionado con otra tabla\")\n    except Exception as e:",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "editar_producto",
        "kind": 2,
        "importPath": "App.tienda.views",
        "description": "App.tienda.views",
        "peekOfCode": "def editar_producto(request, id_produc):\n    pass",
        "detail": "App.tienda.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "App.manage",
        "description": "App.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'App.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "App.manage",
        "documentation": {}
    }
]